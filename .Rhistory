describeBy(iris[,1:4], group=iris$Species)
library(readr)
library(dplyr)
library(ggplot2)
library(psych)
library(car)
library(GGally)
library(mvtnorm)
library(kableExtra)
library(robustbase)
library(rrcov)
library(knitr)
library(plotrix)
library(RColorBrewer)
library(MASS)
library(corrplot)
data("iris")
head(iris)
summary(iris)
describe(iris)
describeBy(iris[,1:4], group=iris$Species)
library(readr)
library(dplyr)
library(ggplot2)
library(psych)
library(car)
library(GGally)
library(mvtnorm)
library(kableExtra)
library(robustbase)
library(rrcov)
library(knitr)
library(plotrix)
library(RColorBrewer)
library(MASS)
library(corrplot)
data("iris")
head(iris)
summary(iris)
describe(iris)
describeBy(iris[,1:4], group=iris$Species)
table(iris$Species)
round(table(iris$Species)/length(iris$Species),3)
round(quantile(iris[,1],probs = seq(0,1,0.2)),3)
round(var(iris[,1:4]),3)
round(cov(iris[,1:4]),3)
round(cor(iris[,1:4]),3)
require(MASS)
?crabs
library(readr)
library(dplyr)
library(ggplot2)
library(psych)
library(car)
library(GGally)
library(mvtnorm)
library(kableExtra)
library(robustbase)
library(rrcov)
library(knitr)
library(plotrix)
library(RColorBrewer)
library(MASS)
library(corrplot)
data("iris")
head(iris)
summary(iris)
describe(iris)
describeBy(iris[,1:4], group=iris$Species)
table(iris$Species)
round(table(iris$Species)/length(iris$Species),3)
round(quantile(iris[,1],probs = seq(0,1,0.2)),3)
round(var(iris[,1:4]),3)
round(cov(iris[,1:4]),3)
round(cor(iris[,1:4]),3)
# 3D Exploded Pie Chart
library(plotrix)
pie3D(as.vector(table(iris$Species)),labels=unique(iris$Species),explode=0.1,main="Iris Species",labelcex=1.0)
# Pie Chart with Percentages
slices <- as.vector(table(iris$Species))
lbls <- names(table(iris$Species))
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),main="Iris Species")
boxplot(iris[,1:4],col=4,prob=TRUE,xlab="Iris Characteristics")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, fill=Species)) +
geom_boxplot(alpha=0.3) + theme(legend.position="none")
hist(iris$Sepal.Length,prob=TRUE,xlab="Sepal Length (cm)",main="Histogram: Iris Dataset")
ggplot(iris, aes(x=Sepal.Length)) +
geom_histogram( fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Default option for the number of bins") +
theme(plot.title = element_text(size=15))
k<-floor(1+log(nrow(iris))/log(2))
delta<-(range(iris$Sepal.Length)[2]-range(iris$Sepal.Length)[1])/k
ggplot(iris, aes(x=Sepal.Length)) +
geom_histogram( binwidth=delta, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Equal width - Sturges Rule") +
theme(plot.title = element_text(size=15))
plot(density(iris$Sepal.Length), main="Sepal Length (cm)")
ggplot(iris, aes(x=Sepal.Length)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
xlim(3,9) + ggtitle("Sepal Length (cm) - ggplot")
qqPlot(iris$Sepal.Length,distribution = "norm",main="Quantile-quantile Plot",pch=20,col="red")
pairs(iris[,1:4],col=(iris$Species),pch=19)
pairs.panels(iris[,1:4], smooth = FALSE, scale = FALSE, density=TRUE,ellipses=FALSE,digits=2)
ggpairs(iris[,1:4], title="Correlogram with ggpairs()")
ggpairs(iris[,1:4], columns = 1:4, ggplot2::aes(colour=iris$Species))
ggcorr(iris[,1:4], method = c("everything", "pearson"))
require(corrplot)
corrplot.mixed(cor(iris[,1:4]))
require(MASS)
?crabs
head(crabs)
R.version
R.Version()
summary(crabs)
describe(crabs)
describeBy(crabs, crabs$sp)
describeBy(crabs, crabs$sex)
table(crabs$sp, crabs$sex)
describeBy(crabs, c(crabs$sp, crabs$sex))
describeBy(crabs, list(crabs$sp, crabs$sex))
round(cov(crabs),3)
crabs
round(cov(crabs[,4:8]),3)
round(cor(crabs[,4:8]),3)
round(cov(crabs[,4:8]),3)
round(cor(crabs[,4:8]),3)
```
round(cov(crabs[,4:8]),3)
round(cor(crabs[,4:8]),3)
```
# Create a boxplot for Carapace Length (CL) by species and sex
boxplot(crabs$CL ~ crabs$sp * crabs$sex,
main = "Carapace Length by Species and Sex",
xlab = "Species and Sex",
ylab = "Carapace Length",
names = c("Blue Male", "Blue Female", "Orange Male", "Orange Female"),
col = c("lightblue", "lightpink", "orange", "lightgreen"))
table(data$sp, data$sex)
boxplot(
select(data, FL:BD),
col = 4, prob = TRUE,
xlab = "Crabs Characteristics"
)
boxplot(
select(crabs, FL:BD),
col = 4, prob = TRUE,
xlab = "Crabs Characteristics"
)
data <- crabs
boxplot(
select(data, FL:BD),
col = 4, prob = TRUE,
xlab = "Crabs Characteristics"
)
library(dplyr)
boxplot(
select(data, FL:BD),
col = 4, prob = TRUE,
xlab = "Crabs Characteristics"
)
select(data, FL:BD)
library(psych)
boxplot(
select(data, FL:BD),
col = 4, prob = TRUE,
xlab = "Crabs Characteristics"
)
# 2.2 Univariate data: Quantitative variables
library(ggplot2)
ggplot(
data,
aes(x = FL, y = RW, fill = sp)
) +
geom_boxplot(alpha = 0.3) +
theme(legend.position = 'none')
pairs(crabs[, 4:8], main = "Scatterplot Matrix for Crabs Dataset",
col = c("blue", "orange")[crabs$sp])
corrplot(cor(crabs[, 4:8]), method = "circle", tl.col = "black", tl.cex = 0.8)
# Visualization: Histogram of the continuous variables
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length", col = "blue")
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length", col = "blue")
# Visualization: Histogram of the continuous variables
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length")
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length")
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length", breaks = 20)
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length", breaks = 30)
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length", breaks = 15)
# Visualization: Histogram of the continuous variables
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length", col='green', breaks = 15)
# Visualization: Histogram of the continuous variables
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length", col='green', breaks = 15)
t(a) %*% colMeans(X)
library(MASS)
data("crabs")
X <- as.matrix(crabs[, 4:8])
# Mean vector (mu) and Covariance matrix (Sigma)
mu <- colMeans(X)
Sigma <- cov(X)
# Define vectors a and b, and matrices A and B
a <- c(1, 0.5, -0.5, 1.5, -1)
b <- c(0.5, -0.5, 1, 1, -1)
A <- matrix(c(1, 0, 0.5, -0.5, 1,
0.5, 1, 0, 1.5, 0,
1.5, 0.5, -1, 0, 1,
-0.5, 1, 0, 0.5, -1,
1, -0.5, 1, -1, 0.5), nrow = 5, byrow = TRUE)
B <- matrix(c(0.5, -1, 0.5, 1, 0.5,
-1, 0.5, -0.5, 1, -0.5,
1, -0.5, 0.5, -1, 0,
0.5, 0, -1, 1, 0.5,
0, 1, -1, 0.5, -0.5), nrow = 5, byrow = TRUE)
t(a) %*% colMeans(X)
t(a) %*% colMeans(X) == t(a) %*% mu
# Variance of aT X
t(a) %*% Sigma %*% a
cov_aXb <- cov(t(a) %*% X, t(b) %*% X)
cov_aXb <- cov(t(a) %*% X, y = t(b) %*% X)
library(readr)
library(dplyr)
library(ggplot2)
library(psych)
library(car)
library(GGally)
library(mvtnorm)
library(kableExtra)
library(robustbase)
library(rrcov)
library(knitr)
library(plotrix)
library(RColorBrewer)
library(MASS)
library(corrplot)
data("iris")
head(iris)
summary(iris)
describe(iris)
describeBy(iris[,1:4], group=iris$Species)
table(iris$Species)
round(table(iris$Species)/length(iris$Species),3)
round(quantile(iris[,1],probs = seq(0,1,0.2)),3)
round(var(iris[,1:4]),3)
round(cov(iris[,1:4]),3)
round(cor(iris[,1:4]),3)
# 3D Exploded Pie Chart
library(plotrix)
pie3D(as.vector(table(iris$Species)),labels=unique(iris$Species),explode=0.1,main="Iris Species",labelcex=1.0)
# Pie Chart with Percentages
slices <- as.vector(table(iris$Species))
lbls <- names(table(iris$Species))
pct <- round(slices/sum(slices)*100)
lbls <- paste(lbls, pct) # add percents to labels
lbls <- paste(lbls,"%",sep="") # ad % to labels
pie(slices,labels = lbls, col=rainbow(length(lbls)),main="Iris Species")
boxplot(iris[,1:4],col=4,prob=TRUE,xlab="Iris Characteristics")
ggplot(iris, aes(x=Sepal.Length, y=Sepal.Width, fill=Species)) +
geom_boxplot(alpha=0.3) + theme(legend.position="none")
hist(iris$Sepal.Length,prob=TRUE,xlab="Sepal Length (cm)",main="Histogram: Iris Dataset")
ggplot(iris, aes(x=Sepal.Length)) +
geom_histogram( fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Default option for the number of bins") +
theme(plot.title = element_text(size=15))
k<-floor(1+log(nrow(iris))/log(2))
delta<-(range(iris$Sepal.Length)[2]-range(iris$Sepal.Length)[1])/k
ggplot(iris, aes(x=Sepal.Length)) +
geom_histogram( binwidth=delta, fill="#69b3a2", color="#e9ecef", alpha=0.9) +
ggtitle("Equal width - Sturges Rule") +
theme(plot.title = element_text(size=15))
plot(density(iris$Sepal.Length), main="Sepal Length (cm)")
ggplot(iris, aes(x=Sepal.Length)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
xlim(3,9) + ggtitle("Sepal Length (cm) - ggplot")
qqPlot(iris$Sepal.Length,distribution = "norm",main="Quantile-quantile Plot",pch=20,col="red")
pairs(iris[,1:4],col=(iris$Species),pch=19)
pairs.panels(iris[,1:4], smooth = FALSE, scale = FALSE, density=TRUE,ellipses=FALSE,digits=2)
ggpairs(iris[,1:4], title="Correlogram with ggpairs()")
ggpairs(iris[,1:4], columns = 1:4, ggplot2::aes(colour=iris$Species))
ggcorr(iris[,1:4], method = c("everything", "pearson"))
require(corrplot)
corrplot.mixed(cor(iris[,1:4]))
require(MASS)
#?crabs
head(crabs)
summary(crabs)
describe(crabs)
table(crabs$sp, crabs$sex)
describeBy(crabs, list(crabs$sp, crabs$sex))
round(cov(crabs[,4:8]),3)
round(cor(crabs[,4:8]),3)
# Create a boxplot for Carapace Length (CL) by species and sex
boxplot(crabs$CL ~ crabs$sp * crabs$sex,
main = "Carapace Length by Species and Sex",
xlab = "Species and Sex",
ylab = "Carapace Length",
names = c("Blue Male", "Blue Female", "Orange Male", "Orange Female"),
col = c("lightblue", "lightpink", "orange", "lightgreen"))
# Visualization: Histogram of the continuous variables
hist(crabs$FL, main = "Histogram of Front Limb Length", xlab = "Front Limb Length", col='green', breaks = 15)
library(MASS)
data("crabs")
X <- as.matrix(crabs[, 4:8])
# Mean vector (mu) and Covariance matrix (Sigma)
mu <- colMeans(X)
Sigma <- cov(X)
# Define vectors a and b, and matrices A and B
a <- c(1, 0.5, -0.5, 1.5, -1)
b <- c(0.5, -0.5, 1, 1, -1)
A <- matrix(
c(1, 0, 0.5, -0.5, 1,
0.5, 1, 0, 1.5, 0,
1.5, 0.5, -1, 0, 1,
-0.5, 1, 0, 0.5, -1,
1, -0.5, 1, -1, 0.5),
nrow = 5, byrow = TRUE)
B <- matrix(
c(0.5, -1, 0.5, 1, 0.5,
-1, 0.5, -0.5, 1, -0.5,
1, -0.5, 0.5, -1, 0,
0.5, 0, -1, 1, 0.5,
0, 1, -1, 0.5, -0.5),
nrow = 5, byrow = TRUE)
t(a) %*% colMeans(X)
t(a) %*% colMeans(X) == t(a) %*% mu
# Variance of aT X
t(a) %*% Sigma %*% a
t(a) %*% Sigma %*% b
cov_aXb <- cov(X %*% a, X %*% b)
t(a) %*% Sigma %*% b
t(a) %*% Sigma %*% b == cov_aXb
cov(X %*% a, X %*% b)
cov_aXb <- cov(X %*% a, X %*% b)
t(a) %*% Sigma %*% b
t(a) %*% Sigma %*% b == cov_aXb
cov_aXb <- cov(X %*% a, X %*% b)
t(a) %*% Sigma %*% b
t(a) %*% Sigma %*% b == cov_aXb
cov_aXb <- cov(X %*% a, X %*% b)
cov_aXb
t(a) %*% Sigma %*% b
t(a) %*% Sigma %*% b == cov_aXb
cov_aXb <- cov(X %*% a, X %*% b)
cov_aXb
t(a) %*% Sigma %*% b
t(a) %*% Sigma %*% b == cov_aXb
cov_aXb <- cov(X %*% a, X %*% b)
cov_aXb
t(a) %*% Sigma %*% b
cov_aXb / sqrt((t(a) %*% Sigma %*% a) * (t(b) %*% Sigma %*% b))
A %*% X
A
dim(X)
var(A %+% t(X))
var(A %*% t(X))
var(X %*% A)
A %*% Sigma %*% t(A)
#var_AX <-
var(X %*% A)
A %*% Sigma %*% t(A)
#var_AX <-
var(A %*% X)
Y <- as.matrix(crabs[, 4:8])
# Mean vector for Y
nu <- colMeans(Y)
# Covariance between X and Y
cov_XY <- cov(X, Y)
cov_XY_alternative <- (t(X) %*% Y) - mu %*% t(nu)
# Both should give similar results
cov_XY
cov_XY_alternative
X1 <- X[, 1:3]
X2 <- X[, 3:5]
cov_X1_X2_Y <- cov(X1 + X2, Y)
cov_X1_Y <- cov(X1, Y)
cov_X2_Y <- cov(X2, Y)
cov_X1_X2_Y == (cov_X1_Y + cov_X2_Y)
install.packages("pdflatex")
install.packages("latexpdf")
tinytex::install_tinytex()
